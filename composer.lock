{
    "_readme": [
        "This file locks the dependencies of your project to a known state",
        "Read more about it at http://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file"
    ],
    "hash": "2ec55f638a9149447b495938c9ce2646",
    "packages": [
        {
            "name": "kriswallsmith/assetic",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/kriswallsmith/assetic.git",
                "reference": "d4680d449a9da80fb82e17627270c91b93a0d46d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/kriswallsmith/assetic/zipball/d4680d449a9da80fb82e17627270c91b93a0d46d",
                "reference": "d4680d449a9da80fb82e17627270c91b93a0d46d",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.1",
                "symfony/process": "~2.1"
            },
            "require-dev": {
                "cssmin/cssmin": "*",
                "joliclic/javascript-packer": "*",
                "kamicane/packager": "*",
                "leafo/lessphp": "*",
                "leafo/scssphp": "*",
                "leafo/scssphp-compass": "*",
                "mrclay/minify": "*",
                "phpunit/phpunit": "~3.7",
                "ptachoire/cssembed": "*",
                "twig/twig": "~1.6"
            },
            "suggest": {
                "leafo/lessphp": "Assetic provides the integration with the lessphp LESS compiler",
                "leafo/scssphp": "Assetic provides the integration with the scssphp SCSS compiler",
                "leafo/scssphp-compass": "Assetic provides the integration with the SCSS compass plugin",
                "ptachoire/cssembed": "Assetic provides the integration with phpcssembed to embed data uris",
                "twig/twig": "Assetic provides the integration with the Twig templating engine"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.2-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Assetic": "src/"
                },
                "files": [
                    "src/functions.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Kris Wallsmith",
                    "email": "kris.wallsmith@gmail.com",
                    "homepage": "http://kriswallsmith.net/"
                }
            ],
            "description": "Asset Management for PHP",
            "homepage": "https://github.com/kriswallsmith/assetic",
            "keywords": [
                "assets",
                "compression",
                "minification"
            ],
            "time": "2013-10-25 15:17:36"
        },
        {
            "name": "symfony/process",
            "version": "dev-master",
            "target-dir": "Symfony/Component/Process",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/Process.git",
                "reference": "ceb4dd952716ddf634c2476bbd64a5b4eccf547d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/Process/zipball/ceb4dd952716ddf634c2476bbd64a5b4eccf547d",
                "reference": "ceb4dd952716ddf634c2476bbd64a5b4eccf547d",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.5-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\Process\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                }
            ],
            "description": "Symfony Process Component",
            "homepage": "http://symfony.com",
            "time": "2013-11-24 20:17:07"
        }
    ],
    "packages-dev": [
        {
            "name": "mockery/mockery",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/padraic/mockery.git",
                "reference": "23ca1a274fb8fd175101574ac81cd1b82f3d0489"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/padraic/mockery/zipball/23ca1a274fb8fd175101574ac81cd1b82f3d0489",
                "reference": "23ca1a274fb8fd175101574ac81cd1b82f3d0489",
                "shasum": ""
            },
            "require": {
                "lib-pcre": ">=7.0",
                "php": ">=5.3.2"
            },
            "require-dev": {
                "hamcrest/hamcrest": "1.1.0"
            },
            "type": "library",
            "autoload": {
                "psr-0": {
                    "Mockery": "library/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "PÃ¡draic Brady",
                    "email": "padraic.brady@gmail.com",
                    "homepage": "http://blog.astrumfutura.com"
                }
            ],
            "description": "Mockery is a simple yet flexible PHP mock object framework for use in unit testing with PHPUnit, PHPSpec or any other testing framework. Its core goal is to offer a test double framework with a succint API capable of clearly defining all possible object operations and interactions using a human readable Domain Specific Language (DSL). Designed as a drop in alternative to PHPUnit's phpunit-mock-objects library, Mockery is easy to integrate with PHPUnit and can operate alongside phpunit-mock-objects without the World ending.",
            "homepage": "http://github.com/padraic/mockery",
            "keywords": [
                "BDD",
                "TDD",
                "library",
                "mock",
                "mock objects",
                "mockery",
                "stub",
                "test",
                "test double",
                "testing"
            ],
            "time": "2013-11-12 11:09:16"
        }
    ],
    "aliases": [

    ],
    "minimum-stability": "dev",
    "stability-flags": {
        "kriswallsmith/assetic": 20,
        "mockery/mockery": 20
    },
    "platform": [

    ],
    "platform-dev": [

    ]
}
